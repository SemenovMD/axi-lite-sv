# //  Questa Intel Starter FPGA Edition-64
# //  Version 2021.2 linux_x86_64 Apr 14 2021
# //
# //  Copyright 1991-2021 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  QuestaSim and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# do tb/vsim/vsim.do
# 
# Create the work library
# vlib work
# ** Warning: (vlib-34) Library already exists at "work".
# Errors: 0, Warnings: 1
# 
# Compile the packages
# vlog -sv tb/pkg_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:04:30 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/pkg_tb.sv 
# -- Compiling package pkg_tb
# 
# Top level modules:
# 	--none--
# End time: 13:04:30 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Compile the design and testbench
# vlog -sv rtl/axil_decoder_addr_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:04:30 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_decoder_addr_wr.sv 
# -- Compiling module axil_decoder_addr_wr
# 
# Top level modules:
# 	axil_decoder_addr_wr
# End time: 13:04:30 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_arbiter_priority_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:04:30 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_arbiter_priority_wr.sv 
# -- Compiling module axil_arbiter_priority_wr
# 
# Top level modules:
# 	axil_arbiter_priority_wr
# End time: 13:04:30 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_crossbar_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:04:30 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_crossbar_wr.sv 
# -- Compiling module axil_crossbar_wr
# ** Warning: rtl/axil_crossbar_wr.sv(9): (vlog-13314) Defaulting port 'grant_wr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(10): (vlog-13314) Defaulting port 'grant_wr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(11): (vlog-13314) Defaulting port 'grant_wr_cdr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(12): (vlog-13314) Defaulting port 'grant_wr_cdr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(15): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(20): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(21): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(42): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(54): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(55): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(56): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(57): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(58): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(59): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(63): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(64): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(65): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(66): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(67): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(68): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(79): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(80): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(81): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(82): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(86): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(87): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(88): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(89): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_crossbar_wr
# End time: 13:04:31 on Jul 25,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 28
# vlog -sv rtl/axil_interconnect.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:04:31 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect.sv 
# -- Compiling module axil_interconnect
# ** Warning: rtl/axil_interconnect.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(96): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(102): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_interconnect
# End time: 13:04:31 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 8
# vlog -sv rtl/axil_interconnect_wrapper.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:04:31 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect_wrapper.sv 
# -- Compiling module axil_interconnect_wrapper
# ** Warning: rtl/axil_interconnect_wrapper.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# 
# Top level modules:
# 	axil_interconnect_wrapper
# End time: 13:04:31 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 4
# vlog -sv tb/axil_interconnect_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:04:31 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/axil_interconnect_tb.sv 
# -- Compiling module axil_interconnect_tb
# -- Importing package pkg_tb
# 
# Top level modules:
# 	axil_interconnect_tb
# End time: 13:04:31 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Simulate the testbench
# vsim -t 1ns -L altera_mf_ver -voptargs="+acc" axil_interconnect_tb
# vsim -t 1ns -L altera_mf_ver -voptargs=""+acc"" axil_interconnect_tb 
# Start time: 13:04:31 on Jul 25,2024
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading sv_std.std
# Loading work.pkg_tb(fast)
# Loading work.axil_interconnect_tb(fast)
# Loading work.axil_interconnect_wrapper(fast)
# Loading work.axil_interconnect(fast)
# Loading work.axil_decoder_addr_wr(fast)
# Loading work.axil_arbiter_priority_wr(fast)
# Loading work.axil_crossbar_wr(fast)
# ** Warning: (vsim-3015) [PCDPC] - Port size (2) does not match connection size (1) for port 'm_axil_awready'. The port definition is at: rtl/axil_crossbar_wr.sv(17).
#    Time: 0 ns  Iteration: 0  Instance: /axil_interconnect_tb/axil_interconnect_wrapper_inst/axil_interconnect_inst/axil_crossbar_wr_inst File: rtl/axil_interconnect.sv Line: 136
# 
# Add signals to the waveform window
# add wave -radix binary              axil_interconnect_wrapper_inst/aclk
# add wave -radix binary              axil_interconnect_wrapper_inst/aresetn
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_wdata[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bresp[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_wdata[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bresp[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bready[1]
# 
# 
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[2]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[3]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[3]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[3]
# 
# 
# Run the simulation for the specified time
# run 10ms
# 
# Zoom out to show all waveform data
# wave zoom full
# 0 ns
# 10500 us
do tb/vsim/vsim.do
# 
# Create the work library
# vlib work
# ** Warning: (vlib-34) Library already exists at "work".
# Errors: 0, Warnings: 1
# 
# Compile the packages
# vlog -sv tb/pkg_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:04:55 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/pkg_tb.sv 
# -- Compiling package pkg_tb
# 
# Top level modules:
# 	--none--
# End time: 13:04:55 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Compile the design and testbench
# vlog -sv rtl/axil_decoder_addr_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:04:55 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_decoder_addr_wr.sv 
# -- Compiling module axil_decoder_addr_wr
# 
# Top level modules:
# 	axil_decoder_addr_wr
# End time: 13:04:55 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_arbiter_priority_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:04:55 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_arbiter_priority_wr.sv 
# -- Compiling module axil_arbiter_priority_wr
# 
# Top level modules:
# 	axil_arbiter_priority_wr
# End time: 13:04:55 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_crossbar_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:04:55 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_crossbar_wr.sv 
# -- Compiling module axil_crossbar_wr
# ** Warning: rtl/axil_crossbar_wr.sv(9): (vlog-13314) Defaulting port 'grant_wr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(10): (vlog-13314) Defaulting port 'grant_wr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(11): (vlog-13314) Defaulting port 'grant_wr_cdr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(12): (vlog-13314) Defaulting port 'grant_wr_cdr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(15): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(20): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(21): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(42): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(54): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(55): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(56): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(57): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(58): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(59): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(63): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(64): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(65): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(66): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(67): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(68): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(79): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(80): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(81): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(82): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(86): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(87): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(88): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(89): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_crossbar_wr
# End time: 13:04:55 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 28
# vlog -sv rtl/axil_interconnect.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:04:55 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect.sv 
# -- Compiling module axil_interconnect
# ** Warning: rtl/axil_interconnect.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(96): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(102): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_interconnect
# End time: 13:04:55 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 8
# vlog -sv rtl/axil_interconnect_wrapper.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:04:55 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect_wrapper.sv 
# -- Compiling module axil_interconnect_wrapper
# ** Warning: rtl/axil_interconnect_wrapper.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# 
# Top level modules:
# 	axil_interconnect_wrapper
# End time: 13:04:56 on Jul 25,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 4
# vlog -sv tb/axil_interconnect_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:04:56 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/axil_interconnect_tb.sv 
# -- Compiling module axil_interconnect_tb
# -- Importing package pkg_tb
# 
# Top level modules:
# 	axil_interconnect_tb
# End time: 13:04:56 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Simulate the testbench
# vsim -t 1ns -L altera_mf_ver -voptargs="+acc" axil_interconnect_tb
# End time: 13:04:56 on Jul 25,2024, Elapsed time: 0:00:25
# Errors: 0, Warnings: 1
# vsim -t 1ns -L altera_mf_ver -voptargs=""+acc"" axil_interconnect_tb 
# Start time: 13:04:56 on Jul 25,2024
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Warning: tb/axil_interconnect_tb.sv(50): (vopt-2685) [TFMPC] - Too few port connections for 'axil_interconnect_wrapper_inst'.  Expected 23, found 22.
# ** Warning: tb/axil_interconnect_tb.sv(50): (vopt-2718) [TFMPC] - Missing connection for port 'addr_illegal'.
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=2.
# Loading sv_std.std
# Loading work.pkg_tb(fast)
# Loading work.axil_interconnect_tb(fast)
# Loading work.axil_interconnect_wrapper(fast)
# Loading work.axil_interconnect(fast)
# Loading work.axil_decoder_addr_wr(fast)
# Loading work.axil_arbiter_priority_wr(fast)
# Loading work.axil_crossbar_wr(fast)
# ** Warning: (vsim-3015) [PCDPC] - Port size (2) does not match connection size (1) for port 'm_axil_awready'. The port definition is at: rtl/axil_crossbar_wr.sv(17).
#    Time: 0 ns  Iteration: 0  Instance: /axil_interconnect_tb/axil_interconnect_wrapper_inst/axil_interconnect_inst/axil_crossbar_wr_inst File: rtl/axil_interconnect.sv Line: 136
# 
# Add signals to the waveform window
# add wave -radix binary              axil_interconnect_wrapper_inst/aclk
# add wave -radix binary              axil_interconnect_wrapper_inst/aresetn
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_wdata[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bresp[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_wdata[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bresp[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bready[1]
# 
# 
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[2]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[3]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[3]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[3]
# 
# 
# Run the simulation for the specified time
# run 10ms
# 
# Zoom out to show all waveform data
# wave zoom full
# 0 ns
# 10500 us
do tb/vsim/vsim.do
# 
# Create the work library
# vlib work
# ** Warning: (vlib-34) Library already exists at "work".
# Errors: 0, Warnings: 1
# 
# Compile the packages
# vlog -sv tb/pkg_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:07:18 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/pkg_tb.sv 
# -- Compiling package pkg_tb
# 
# Top level modules:
# 	--none--
# End time: 13:07:18 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Compile the design and testbench
# vlog -sv rtl/axil_decoder_addr_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:07:18 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_decoder_addr_wr.sv 
# -- Compiling module axil_decoder_addr_wr
# 
# Top level modules:
# 	axil_decoder_addr_wr
# End time: 13:07:18 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_arbiter_priority_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:07:18 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_arbiter_priority_wr.sv 
# -- Compiling module axil_arbiter_priority_wr
# 
# Top level modules:
# 	axil_arbiter_priority_wr
# End time: 13:07:18 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_crossbar_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:07:18 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_crossbar_wr.sv 
# -- Compiling module axil_crossbar_wr
# ** Warning: rtl/axil_crossbar_wr.sv(9): (vlog-13314) Defaulting port 'grant_wr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(10): (vlog-13314) Defaulting port 'grant_wr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(11): (vlog-13314) Defaulting port 'grant_wr_cdr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(12): (vlog-13314) Defaulting port 'grant_wr_cdr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(15): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(20): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(21): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(42): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(54): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(55): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(56): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(57): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(58): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(59): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(63): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(64): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(65): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(66): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(67): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(68): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(79): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(80): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(81): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(82): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(86): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(87): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(88): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(89): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_crossbar_wr
# End time: 13:07:18 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 28
# vlog -sv rtl/axil_interconnect.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:07:18 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect.sv 
# -- Compiling module axil_interconnect
# ** Warning: rtl/axil_interconnect.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(96): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(102): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_interconnect
# End time: 13:07:18 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 8
# vlog -sv rtl/axil_interconnect_wrapper.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:07:18 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect_wrapper.sv 
# -- Compiling module axil_interconnect_wrapper
# ** Warning: rtl/axil_interconnect_wrapper.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# 
# Top level modules:
# 	axil_interconnect_wrapper
# End time: 13:07:18 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 4
# vlog -sv tb/axil_interconnect_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:07:18 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/axil_interconnect_tb.sv 
# -- Compiling module axil_interconnect_tb
# -- Importing package pkg_tb
# 
# Top level modules:
# 	axil_interconnect_tb
# End time: 13:07:18 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Simulate the testbench
# vsim -t 1ns -L altera_mf_ver -voptargs="+acc" axil_interconnect_tb
# End time: 13:07:19 on Jul 25,2024, Elapsed time: 0:02:23
# Errors: 0, Warnings: 3
# vsim -t 1ns -L altera_mf_ver -voptargs=""+acc"" axil_interconnect_tb 
# Start time: 13:07:19 on Jul 25,2024
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Warning: tb/axil_interconnect_tb.sv(50): (vopt-2685) [TFMPC] - Too few port connections for 'axil_interconnect_wrapper_inst'.  Expected 23, found 22.
# ** Warning: tb/axil_interconnect_tb.sv(50): (vopt-2718) [TFMPC] - Missing connection for port 'addr_illegal'.
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=2.
# Loading sv_std.std
# Loading work.pkg_tb(fast)
# Loading work.axil_interconnect_tb(fast)
# Loading work.axil_interconnect_wrapper(fast)
# Loading work.axil_interconnect(fast)
# Loading work.axil_decoder_addr_wr(fast)
# Loading work.axil_arbiter_priority_wr(fast)
# Loading work.axil_crossbar_wr(fast)
# ** Warning: (vsim-3015) [PCDPC] - Port size (2) does not match connection size (1) for port 'm_axil_awready'. The port definition is at: rtl/axil_crossbar_wr.sv(17).
#    Time: 0 ns  Iteration: 0  Instance: /axil_interconnect_tb/axil_interconnect_wrapper_inst/axil_interconnect_inst/axil_crossbar_wr_inst File: rtl/axil_interconnect.sv Line: 136
# 
# Add signals to the waveform window
# add wave -radix binary              axil_interconnect_wrapper_inst/aclk
# add wave -radix binary              axil_interconnect_wrapper_inst/aresetn
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_wdata[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bresp[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_wdata[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bresp[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bready[1]
# 
# 
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[2]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[3]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[3]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[3]
# 
# 
# Run the simulation for the specified time
# run 10ms
# 
# Zoom out to show all waveform data
# wave zoom full
# 0 ns
# 10500 us
do tb/vsim/vsim.do
# 
# Create the work library
# vlib work
# ** Warning: (vlib-34) Library already exists at "work".
# Errors: 0, Warnings: 1
# 
# Compile the packages
# vlog -sv tb/pkg_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:08:49 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/pkg_tb.sv 
# -- Compiling package pkg_tb
# 
# Top level modules:
# 	--none--
# End time: 13:08:49 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Compile the design and testbench
# vlog -sv rtl/axil_decoder_addr_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:08:49 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_decoder_addr_wr.sv 
# -- Compiling module axil_decoder_addr_wr
# 
# Top level modules:
# 	axil_decoder_addr_wr
# End time: 13:08:49 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_arbiter_priority_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:08:49 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_arbiter_priority_wr.sv 
# -- Compiling module axil_arbiter_priority_wr
# 
# Top level modules:
# 	axil_arbiter_priority_wr
# End time: 13:08:49 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_crossbar_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:08:49 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_crossbar_wr.sv 
# -- Compiling module axil_crossbar_wr
# ** Warning: rtl/axil_crossbar_wr.sv(9): (vlog-13314) Defaulting port 'grant_wr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(10): (vlog-13314) Defaulting port 'grant_wr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(11): (vlog-13314) Defaulting port 'grant_wr_cdr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(12): (vlog-13314) Defaulting port 'grant_wr_cdr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(15): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(20): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(21): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(42): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(54): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(55): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(56): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(57): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(58): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(59): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(63): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(64): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(65): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(66): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(67): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(68): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(79): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(80): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(81): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(82): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(86): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(87): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(88): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(89): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_crossbar_wr
# End time: 13:08:49 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 28
# vlog -sv rtl/axil_interconnect.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:08:49 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect.sv 
# -- Compiling module axil_interconnect
# ** Warning: rtl/axil_interconnect.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(96): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(102): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_interconnect
# End time: 13:08:50 on Jul 25,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 8
# vlog -sv rtl/axil_interconnect_wrapper.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:08:50 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect_wrapper.sv 
# -- Compiling module axil_interconnect_wrapper
# ** Warning: rtl/axil_interconnect_wrapper.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# 
# Top level modules:
# 	axil_interconnect_wrapper
# End time: 13:08:50 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 4
# vlog -sv tb/axil_interconnect_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:08:50 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/axil_interconnect_tb.sv 
# -- Compiling module axil_interconnect_tb
# -- Importing package pkg_tb
# 
# Top level modules:
# 	axil_interconnect_tb
# End time: 13:08:50 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Simulate the testbench
# vsim -t 1ns -L altera_mf_ver -voptargs="+acc" axil_interconnect_tb
# End time: 13:08:50 on Jul 25,2024, Elapsed time: 0:01:31
# Errors: 0, Warnings: 3
# vsim -t 1ns -L altera_mf_ver -voptargs=""+acc"" axil_interconnect_tb 
# Start time: 13:08:50 on Jul 25,2024
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Warning: rtl/axil_interconnect.sv(16): (vopt-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(21): (vopt-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(22): (vopt-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(43): (vopt-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=4.
# Loading sv_std.std
# Loading work.pkg_tb(fast)
# Loading work.axil_interconnect_tb(fast)
# Loading work.axil_interconnect_wrapper(fast)
# Loading work.axil_interconnect(fast)
# Loading work.axil_decoder_addr_wr(fast)
# Loading work.axil_arbiter_priority_wr(fast)
# Loading work.axil_crossbar_wr(fast)
# 
# Add signals to the waveform window
# add wave -radix binary              axil_interconnect_wrapper_inst/aclk
# add wave -radix binary              axil_interconnect_wrapper_inst/aresetn
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_wdata[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bresp[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_wdata[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bresp[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bready[1]
# 
# 
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[2]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[3]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[3]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[3]
# 
# 
# Run the simulation for the specified time
# run 10ms
# ** Note: $finish    : tb/axil_interconnect_tb.sv(187)
#    Time: 245 ns  Iteration: 1  Instance: /axil_interconnect_tb
# 1
# Break in Module axil_interconnect_tb at tb/axil_interconnect_tb.sv line 187
# 
# Zoom out to show all waveform data
# wave zoom full
# 0 ns
# 257 ns
do tb/vsim/vsim.do
# 
# Create the work library
# vlib work
# ** Warning: (vlib-34) Library already exists at "work".
# Errors: 0, Warnings: 1
# 
# Compile the packages
# vlog -sv tb/pkg_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:09:26 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/pkg_tb.sv 
# -- Compiling package pkg_tb
# 
# Top level modules:
# 	--none--
# End time: 13:09:26 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Compile the design and testbench
# vlog -sv rtl/axil_decoder_addr_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:09:26 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_decoder_addr_wr.sv 
# -- Compiling module axil_decoder_addr_wr
# 
# Top level modules:
# 	axil_decoder_addr_wr
# End time: 13:09:26 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_arbiter_priority_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:09:26 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_arbiter_priority_wr.sv 
# -- Compiling module axil_arbiter_priority_wr
# 
# Top level modules:
# 	axil_arbiter_priority_wr
# End time: 13:09:27 on Jul 25,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_crossbar_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:09:27 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_crossbar_wr.sv 
# -- Compiling module axil_crossbar_wr
# ** Warning: rtl/axil_crossbar_wr.sv(9): (vlog-13314) Defaulting port 'grant_wr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(10): (vlog-13314) Defaulting port 'grant_wr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(11): (vlog-13314) Defaulting port 'grant_wr_cdr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(12): (vlog-13314) Defaulting port 'grant_wr_cdr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(15): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(20): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(21): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(42): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(54): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(55): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(56): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(57): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(58): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(59): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(63): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(64): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(65): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(66): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(67): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(68): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(79): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(80): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(81): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(82): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(86): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(87): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(88): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(89): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_crossbar_wr
# End time: 13:09:27 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 28
# vlog -sv rtl/axil_interconnect.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:09:27 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect.sv 
# -- Compiling module axil_interconnect
# ** Warning: rtl/axil_interconnect.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(96): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(102): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_interconnect
# End time: 13:09:27 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 8
# vlog -sv rtl/axil_interconnect_wrapper.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:09:27 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect_wrapper.sv 
# -- Compiling module axil_interconnect_wrapper
# ** Warning: rtl/axil_interconnect_wrapper.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# 
# Top level modules:
# 	axil_interconnect_wrapper
# End time: 13:09:27 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 4
# vlog -sv tb/axil_interconnect_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:09:27 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/axil_interconnect_tb.sv 
# -- Compiling module axil_interconnect_tb
# -- Importing package pkg_tb
# 
# Top level modules:
# 	axil_interconnect_tb
# End time: 13:09:27 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Simulate the testbench
# vsim -t 1ns -L altera_mf_ver -voptargs="+acc" axil_interconnect_tb
# End time: 13:09:30 on Jul 25,2024, Elapsed time: 0:00:40
# Errors: 0, Warnings: 4
# vsim -t 1ns -L altera_mf_ver -voptargs=""+acc"" axil_interconnect_tb 
# Start time: 13:09:30 on Jul 25,2024
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Warning: tb/axil_interconnect_tb.sv(50): (vopt-2685) [TFMPC] - Too few port connections for 'axil_interconnect_wrapper_inst'.  Expected 23, found 22.
# ** Warning: tb/axil_interconnect_tb.sv(50): (vopt-2718) [TFMPC] - Missing connection for port 'addr_illegal'.
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=2.
# Loading sv_std.std
# Loading work.pkg_tb(fast)
# Loading work.axil_interconnect_tb(fast)
# Loading work.axil_interconnect_wrapper(fast)
# Loading work.axil_interconnect(fast)
# Loading work.axil_decoder_addr_wr(fast)
# Loading work.axil_arbiter_priority_wr(fast)
# Loading work.axil_crossbar_wr(fast)
# 
# Add signals to the waveform window
# add wave -radix binary              axil_interconnect_wrapper_inst/aclk
# add wave -radix binary              axil_interconnect_wrapper_inst/aresetn
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_wdata[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bresp[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_wdata[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bresp[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bready[1]
# 
# 
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[2]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[3]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[3]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[3]
# 
# 
# Run the simulation for the specified time
# run 10ms
# 
# Zoom out to show all waveform data
# wave zoom full
# 0 ns
# 10500 us
do tb/vsim/vsim.do
# 
# Create the work library
# vlib work
# ** Warning: (vlib-34) Library already exists at "work".
# Errors: 0, Warnings: 1
# 
# Compile the packages
# vlog -sv tb/pkg_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:10:31 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/pkg_tb.sv 
# -- Compiling package pkg_tb
# 
# Top level modules:
# 	--none--
# End time: 13:10:31 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Compile the design and testbench
# vlog -sv rtl/axil_decoder_addr_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:10:31 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_decoder_addr_wr.sv 
# -- Compiling module axil_decoder_addr_wr
# 
# Top level modules:
# 	axil_decoder_addr_wr
# End time: 13:10:31 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_arbiter_priority_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:10:31 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_arbiter_priority_wr.sv 
# -- Compiling module axil_arbiter_priority_wr
# 
# Top level modules:
# 	axil_arbiter_priority_wr
# End time: 13:10:31 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_crossbar_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:10:31 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_crossbar_wr.sv 
# -- Compiling module axil_crossbar_wr
# ** Warning: rtl/axil_crossbar_wr.sv(9): (vlog-13314) Defaulting port 'grant_wr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(10): (vlog-13314) Defaulting port 'grant_wr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(11): (vlog-13314) Defaulting port 'grant_wr_cdr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(12): (vlog-13314) Defaulting port 'grant_wr_cdr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(15): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(20): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(21): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(42): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(54): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(55): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(56): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(57): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(58): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(59): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(63): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(64): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(65): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(66): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(67): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(68): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(79): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(80): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(81): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(82): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(86): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(87): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(88): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(89): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_crossbar_wr
# End time: 13:10:31 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 28
# vlog -sv rtl/axil_interconnect.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:10:31 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect.sv 
# -- Compiling module axil_interconnect
# ** Warning: rtl/axil_interconnect.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(96): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(102): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_interconnect
# End time: 13:10:31 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 8
# vlog -sv rtl/axil_interconnect_wrapper.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:10:31 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect_wrapper.sv 
# -- Compiling module axil_interconnect_wrapper
# ** Warning: rtl/axil_interconnect_wrapper.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# 
# Top level modules:
# 	axil_interconnect_wrapper
# End time: 13:10:31 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 4
# vlog -sv tb/axil_interconnect_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:10:31 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/axil_interconnect_tb.sv 
# -- Compiling module axil_interconnect_tb
# -- Importing package pkg_tb
# 
# Top level modules:
# 	axil_interconnect_tb
# End time: 13:10:31 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Simulate the testbench
# vsim -t 1ns -L altera_mf_ver -voptargs="+acc" axil_interconnect_tb
# End time: 13:10:33 on Jul 25,2024, Elapsed time: 0:01:03
# Errors: 0, Warnings: 2
# vsim -t 1ns -L altera_mf_ver -voptargs=""+acc"" axil_interconnect_tb 
# Start time: 13:10:33 on Jul 25,2024
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Warning: tb/axil_interconnect_tb.sv(50): (vopt-2685) [TFMPC] - Too few port connections for 'axil_interconnect_wrapper_inst'.  Expected 23, found 22.
# ** Warning: tb/axil_interconnect_tb.sv(50): (vopt-2718) [TFMPC] - Missing connection for port 'addr_illegal'.
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=2.
# Loading sv_std.std
# Loading work.pkg_tb(fast)
# Loading work.axil_interconnect_tb(fast)
# Loading work.axil_interconnect_wrapper(fast)
# Loading work.axil_interconnect(fast)
# Loading work.axil_decoder_addr_wr(fast)
# Loading work.axil_arbiter_priority_wr(fast)
# Loading work.axil_crossbar_wr(fast)
# 
# Add signals to the waveform window
# add wave -radix binary              axil_interconnect_wrapper_inst/aclk
# add wave -radix binary              axil_interconnect_wrapper_inst/aresetn
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_wdata[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bresp[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_wdata[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bresp[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bready[1]
# 
# 
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[2]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[3]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[3]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[3]
# 
# 
# Run the simulation for the specified time
# run 10ms
# 
# Zoom out to show all waveform data
# wave zoom full
# 0 ns
# 10500 us
do tb/vsim/vsim.do
# 
# Create the work library
# vlib work
# ** Warning: (vlib-34) Library already exists at "work".
# Errors: 0, Warnings: 1
# 
# Compile the packages
# vlog -sv tb/pkg_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:16:53 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/pkg_tb.sv 
# -- Compiling package pkg_tb
# 
# Top level modules:
# 	--none--
# End time: 13:16:53 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Compile the design and testbench
# vlog -sv rtl/axil_decoder_addr_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:16:53 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_decoder_addr_wr.sv 
# -- Compiling module axil_decoder_addr_wr
# 
# Top level modules:
# 	axil_decoder_addr_wr
# End time: 13:16:53 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_arbiter_priority_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:16:53 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_arbiter_priority_wr.sv 
# -- Compiling module axil_arbiter_priority_wr
# 
# Top level modules:
# 	axil_arbiter_priority_wr
# End time: 13:16:53 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_crossbar_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:16:53 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_crossbar_wr.sv 
# -- Compiling module axil_crossbar_wr
# ** Warning: rtl/axil_crossbar_wr.sv(9): (vlog-13314) Defaulting port 'grant_wr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(10): (vlog-13314) Defaulting port 'grant_wr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(11): (vlog-13314) Defaulting port 'grant_wr_cdr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(12): (vlog-13314) Defaulting port 'grant_wr_cdr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(15): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(20): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(21): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(42): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(54): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(55): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(56): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(57): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(58): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(59): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(63): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(64): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(65): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(66): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(67): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(68): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(79): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(80): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(81): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(82): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(86): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(87): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(88): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(89): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_crossbar_wr
# End time: 13:16:53 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 28
# vlog -sv rtl/axil_interconnect.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:16:53 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect.sv 
# -- Compiling module axil_interconnect
# ** Warning: rtl/axil_interconnect.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(96): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(102): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_interconnect
# End time: 13:16:54 on Jul 25,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 8
# vlog -sv rtl/axil_interconnect_wrapper.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:16:54 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect_wrapper.sv 
# -- Compiling module axil_interconnect_wrapper
# ** Warning: rtl/axil_interconnect_wrapper.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# 
# Top level modules:
# 	axil_interconnect_wrapper
# End time: 13:16:54 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 4
# vlog -sv tb/axil_interconnect_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:16:54 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/axil_interconnect_tb.sv 
# -- Compiling module axil_interconnect_tb
# -- Importing package pkg_tb
# 
# Top level modules:
# 	axil_interconnect_tb
# End time: 13:16:54 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Simulate the testbench
# vsim -t 1ns -L altera_mf_ver -voptargs="+acc" axil_interconnect_tb
# End time: 13:16:57 on Jul 25,2024, Elapsed time: 0:06:24
# Errors: 0, Warnings: 2
# vsim -t 1ns -L altera_mf_ver -voptargs=""+acc"" axil_interconnect_tb 
# Start time: 13:16:57 on Jul 25,2024
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Warning: tb/axil_interconnect_tb.sv(50): (vopt-2685) [TFMPC] - Too few port connections for 'axil_interconnect_wrapper_inst'.  Expected 23, found 22.
# ** Warning: tb/axil_interconnect_tb.sv(50): (vopt-2718) [TFMPC] - Missing connection for port 'addr_illegal'.
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=2.
# Loading sv_std.std
# Loading work.pkg_tb(fast)
# Loading work.axil_interconnect_tb(fast)
# Loading work.axil_interconnect_wrapper(fast)
# Loading work.axil_interconnect(fast)
# Loading work.axil_decoder_addr_wr(fast)
# Loading work.axil_arbiter_priority_wr(fast)
# Loading work.axil_crossbar_wr(fast)
# 
# Add signals to the waveform window
# add wave -radix binary              axil_interconnect_wrapper_inst/aclk
# add wave -radix binary              axil_interconnect_wrapper_inst/aresetn
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_wdata[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bresp[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_wdata[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bresp[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bready[1]
# 
# 
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[2]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[3]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[3]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[3]
# 
# 
# Run the simulation for the specified time
# run 10ms
# 
# Zoom out to show all waveform data
# wave zoom full
# 0 ns
# 10500 us
do tb/vsim/vsim.do
# 
# Create the work library
# vlib work
# ** Warning: (vlib-34) Library already exists at "work".
# Errors: 0, Warnings: 1
# 
# Compile the packages
# vlog -sv tb/pkg_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:18:24 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/pkg_tb.sv 
# -- Compiling package pkg_tb
# 
# Top level modules:
# 	--none--
# End time: 13:18:24 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Compile the design and testbench
# vlog -sv rtl/axil_decoder_addr_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:18:24 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_decoder_addr_wr.sv 
# -- Compiling module axil_decoder_addr_wr
# 
# Top level modules:
# 	axil_decoder_addr_wr
# End time: 13:18:25 on Jul 25,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_arbiter_priority_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:18:25 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_arbiter_priority_wr.sv 
# -- Compiling module axil_arbiter_priority_wr
# 
# Top level modules:
# 	axil_arbiter_priority_wr
# End time: 13:18:25 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_crossbar_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:18:25 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_crossbar_wr.sv 
# -- Compiling module axil_crossbar_wr
# ** Warning: rtl/axil_crossbar_wr.sv(9): (vlog-13314) Defaulting port 'grant_wr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(10): (vlog-13314) Defaulting port 'grant_wr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(11): (vlog-13314) Defaulting port 'grant_wr_cdr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(12): (vlog-13314) Defaulting port 'grant_wr_cdr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(15): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(20): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(21): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(42): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(54): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(55): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(56): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(57): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(58): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(59): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(63): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(64): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(65): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(66): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(67): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(68): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(79): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(80): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(81): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(82): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(86): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(87): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(88): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(89): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_crossbar_wr
# End time: 13:18:25 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 28
# vlog -sv rtl/axil_interconnect.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:18:25 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect.sv 
# -- Compiling module axil_interconnect
# ** Warning: rtl/axil_interconnect.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(96): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(102): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_interconnect
# End time: 13:18:25 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 8
# vlog -sv rtl/axil_interconnect_wrapper.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:18:25 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect_wrapper.sv 
# -- Compiling module axil_interconnect_wrapper
# ** Warning: rtl/axil_interconnect_wrapper.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# 
# Top level modules:
# 	axil_interconnect_wrapper
# End time: 13:18:25 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 4
# vlog -sv tb/axil_interconnect_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:18:25 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/axil_interconnect_tb.sv 
# -- Compiling module axil_interconnect_tb
# -- Importing package pkg_tb
# 
# Top level modules:
# 	axil_interconnect_tb
# End time: 13:18:25 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Simulate the testbench
# vsim -t 1ns -L altera_mf_ver -voptargs="+acc" axil_interconnect_tb
# End time: 13:18:28 on Jul 25,2024, Elapsed time: 0:01:31
# Errors: 0, Warnings: 2
# vsim -t 1ns -L altera_mf_ver -voptargs=""+acc"" axil_interconnect_tb 
# Start time: 13:18:28 on Jul 25,2024
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Warning: tb/axil_interconnect_tb.sv(50): (vopt-2685) [TFMPC] - Too few port connections for 'axil_interconnect_wrapper_inst'.  Expected 23, found 22.
# ** Warning: tb/axil_interconnect_tb.sv(50): (vopt-2718) [TFMPC] - Missing connection for port 'addr_illegal'.
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=2.
# Loading sv_std.std
# Loading work.pkg_tb(fast)
# Loading work.axil_interconnect_tb(fast)
# Loading work.axil_interconnect_wrapper(fast)
# Loading work.axil_interconnect(fast)
# Loading work.axil_decoder_addr_wr(fast)
# Loading work.axil_arbiter_priority_wr(fast)
# Loading work.axil_crossbar_wr(fast)
# 
# Add signals to the waveform window
# add wave -radix binary              axil_interconnect_wrapper_inst/aclk
# add wave -radix binary              axil_interconnect_wrapper_inst/aresetn
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_wdata[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bresp[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_wdata[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bresp[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bready[1]
# 
# 
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[2]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[3]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[3]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[3]
# 
# 
# Run the simulation for the specified time
# run 10ms
# 
# Zoom out to show all waveform data
# wave zoom full
# 0 ns
# 10500 us
do tb/vsim/vsim.do
# 
# Create the work library
# vlib work
# ** Warning: (vlib-34) Library already exists at "work".
# Errors: 0, Warnings: 1
# 
# Compile the packages
# vlog -sv tb/pkg_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:20:39 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/pkg_tb.sv 
# -- Compiling package pkg_tb
# 
# Top level modules:
# 	--none--
# End time: 13:20:39 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Compile the design and testbench
# vlog -sv rtl/axil_decoder_addr_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:20:39 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_decoder_addr_wr.sv 
# -- Compiling module axil_decoder_addr_wr
# 
# Top level modules:
# 	axil_decoder_addr_wr
# End time: 13:20:39 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_arbiter_priority_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:20:39 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_arbiter_priority_wr.sv 
# -- Compiling module axil_arbiter_priority_wr
# 
# Top level modules:
# 	axil_arbiter_priority_wr
# End time: 13:20:39 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_crossbar_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:20:39 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_crossbar_wr.sv 
# -- Compiling module axil_crossbar_wr
# ** Warning: rtl/axil_crossbar_wr.sv(9): (vlog-13314) Defaulting port 'grant_wr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(10): (vlog-13314) Defaulting port 'grant_wr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(11): (vlog-13314) Defaulting port 'grant_wr_cdr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(12): (vlog-13314) Defaulting port 'grant_wr_cdr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(15): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(20): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(21): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(42): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(54): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(55): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(56): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(57): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(58): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(59): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(63): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(64): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(65): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(66): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(67): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(68): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(79): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(80): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(81): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(82): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(86): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(87): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(88): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(89): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_crossbar_wr
# End time: 13:20:39 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 28
# vlog -sv rtl/axil_interconnect.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:20:39 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect.sv 
# -- Compiling module axil_interconnect
# ** Warning: rtl/axil_interconnect.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(96): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(102): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_interconnect
# End time: 13:20:39 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 8
# vlog -sv rtl/axil_interconnect_wrapper.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:20:39 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect_wrapper.sv 
# -- Compiling module axil_interconnect_wrapper
# ** Warning: rtl/axil_interconnect_wrapper.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# 
# Top level modules:
# 	axil_interconnect_wrapper
# End time: 13:20:39 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 4
# vlog -sv tb/axil_interconnect_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:20:39 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/axil_interconnect_tb.sv 
# -- Compiling module axil_interconnect_tb
# -- Importing package pkg_tb
# 
# Top level modules:
# 	axil_interconnect_tb
# End time: 13:20:39 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Simulate the testbench
# vsim -t 1ns -L altera_mf_ver -voptargs="+acc" axil_interconnect_tb
# End time: 13:20:42 on Jul 25,2024, Elapsed time: 0:02:14
# Errors: 0, Warnings: 2
# vsim -t 1ns -L altera_mf_ver -voptargs=""+acc"" axil_interconnect_tb 
# Start time: 13:20:42 on Jul 25,2024
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Warning: tb/axil_interconnect_tb.sv(50): (vopt-2685) [TFMPC] - Too few port connections for 'axil_interconnect_wrapper_inst'.  Expected 23, found 22.
# ** Warning: tb/axil_interconnect_tb.sv(50): (vopt-2718) [TFMPC] - Missing connection for port 'addr_illegal'.
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=2.
# Loading sv_std.std
# Loading work.pkg_tb(fast)
# Loading work.axil_interconnect_tb(fast)
# Loading work.axil_interconnect_wrapper(fast)
# Loading work.axil_interconnect(fast)
# Loading work.axil_decoder_addr_wr(fast)
# Loading work.axil_arbiter_priority_wr(fast)
# Loading work.axil_crossbar_wr(fast)
# 
# Add signals to the waveform window
# add wave -radix binary              axil_interconnect_wrapper_inst/aclk
# add wave -radix binary              axil_interconnect_wrapper_inst/aresetn
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_wdata[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bresp[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_wdata[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bresp[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bready[1]
# 
# 
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[2]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[3]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[3]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[3]
# 
# 
# Run the simulation for the specified time
# run 10ms
# 
# Zoom out to show all waveform data
# wave zoom full
# 0 ns
# 10500 us
1
# [1]
do tb/vsim/vsim.do
# 
# Create the work library
# vlib work
# ** Warning: (vlib-34) Library already exists at "work".
# Errors: 0, Warnings: 1
# 
# Compile the packages
# vlog -sv tb/pkg_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:23:04 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/pkg_tb.sv 
# -- Compiling package pkg_tb
# 
# Top level modules:
# 	--none--
# End time: 13:23:04 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Compile the design and testbench
# vlog -sv rtl/axil_decoder_addr_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:23:04 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_decoder_addr_wr.sv 
# -- Compiling module axil_decoder_addr_wr
# 
# Top level modules:
# 	axil_decoder_addr_wr
# End time: 13:23:04 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_arbiter_priority_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:23:04 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_arbiter_priority_wr.sv 
# -- Compiling module axil_arbiter_priority_wr
# 
# Top level modules:
# 	axil_arbiter_priority_wr
# End time: 13:23:04 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_crossbar_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:23:04 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_crossbar_wr.sv 
# -- Compiling module axil_crossbar_wr
# ** Warning: rtl/axil_crossbar_wr.sv(9): (vlog-13314) Defaulting port 'grant_wr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(10): (vlog-13314) Defaulting port 'grant_wr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(11): (vlog-13314) Defaulting port 'grant_wr_cdr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(12): (vlog-13314) Defaulting port 'grant_wr_cdr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(15): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(20): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(21): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(42): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(54): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(55): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(56): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(57): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(58): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(59): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(63): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(64): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(65): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(66): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(67): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(68): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(79): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(80): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(81): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(82): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(86): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(87): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(88): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(89): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_crossbar_wr
# End time: 13:23:04 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 28
# vlog -sv rtl/axil_interconnect.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:23:04 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect.sv 
# -- Compiling module axil_interconnect
# ** Warning: rtl/axil_interconnect.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(96): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(102): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_interconnect
# End time: 13:23:04 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 8
# vlog -sv rtl/axil_interconnect_wrapper.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:23:04 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect_wrapper.sv 
# -- Compiling module axil_interconnect_wrapper
# ** Warning: rtl/axil_interconnect_wrapper.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# 
# Top level modules:
# 	axil_interconnect_wrapper
# End time: 13:23:04 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 4
# vlog -sv tb/axil_interconnect_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:23:04 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/axil_interconnect_tb.sv 
# -- Compiling module axil_interconnect_tb
# -- Importing package pkg_tb
# 
# Top level modules:
# 	axil_interconnect_tb
# End time: 13:23:04 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Simulate the testbench
# vsim -t 1ns -L altera_mf_ver -voptargs="+acc" axil_interconnect_tb
# End time: 13:23:06 on Jul 25,2024, Elapsed time: 0:02:24
# Errors: 0, Warnings: 2
# vsim -t 1ns -L altera_mf_ver -voptargs=""+acc"" axil_interconnect_tb 
# Start time: 13:23:06 on Jul 25,2024
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Warning: tb/axil_interconnect_tb.sv(50): (vopt-2685) [TFMPC] - Too few port connections for 'axil_interconnect_wrapper_inst'.  Expected 23, found 22.
# ** Warning: tb/axil_interconnect_tb.sv(50): (vopt-2718) [TFMPC] - Missing connection for port 'addr_illegal'.
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=2.
# Loading sv_std.std
# Loading work.pkg_tb(fast)
# Loading work.axil_interconnect_tb(fast)
# Loading work.axil_interconnect_wrapper(fast)
# Loading work.axil_interconnect(fast)
# Loading work.axil_decoder_addr_wr(fast)
# Loading work.axil_arbiter_priority_wr(fast)
# Loading work.axil_crossbar_wr(fast)
# 
# Add signals to the waveform window
# add wave -radix binary              axil_interconnect_wrapper_inst/aclk
# add wave -radix binary              axil_interconnect_wrapper_inst/aresetn
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_wdata[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bresp[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_wdata[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bresp[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bready[1]
# 
# 
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[2]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[3]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[3]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[3]
# 
# 
# Run the simulation for the specified time
# run 10ms
# ** Note: $finish    : tb/axil_interconnect_tb.sv(196)
#    Time: 100 ns  Iteration: 0  Instance: /axil_interconnect_tb
# 1
# Break in Module axil_interconnect_tb at tb/axil_interconnect_tb.sv line 196
# 
# Zoom out to show all waveform data
# wave zoom full
# 0 ns
# 105 ns
do tb/vsim/vsim.do
# 
# Create the work library
# vlib work
# ** Warning: (vlib-34) Library already exists at "work".
# Errors: 0, Warnings: 1
# 
# Compile the packages
# vlog -sv tb/pkg_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:25:51 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/pkg_tb.sv 
# -- Compiling package pkg_tb
# 
# Top level modules:
# 	--none--
# End time: 13:25:52 on Jul 25,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# 
# Compile the design and testbench
# vlog -sv rtl/axil_decoder_addr_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:25:52 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_decoder_addr_wr.sv 
# -- Compiling module axil_decoder_addr_wr
# 
# Top level modules:
# 	axil_decoder_addr_wr
# End time: 13:25:52 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_arbiter_priority_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:25:52 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_arbiter_priority_wr.sv 
# -- Compiling module axil_arbiter_priority_wr
# 
# Top level modules:
# 	axil_arbiter_priority_wr
# End time: 13:25:52 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_crossbar_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:25:52 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_crossbar_wr.sv 
# -- Compiling module axil_crossbar_wr
# ** Warning: rtl/axil_crossbar_wr.sv(9): (vlog-13314) Defaulting port 'grant_wr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(10): (vlog-13314) Defaulting port 'grant_wr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(11): (vlog-13314) Defaulting port 'grant_wr_cdr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(12): (vlog-13314) Defaulting port 'grant_wr_cdr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(15): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(20): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(21): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(42): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(54): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(55): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(56): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(57): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(58): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(59): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(63): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(64): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(65): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(66): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(67): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(68): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(79): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(80): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(81): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(82): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(86): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(87): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(88): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(89): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_crossbar_wr
# End time: 13:25:52 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 28
# vlog -sv rtl/axil_interconnect.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:25:52 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect.sv 
# -- Compiling module axil_interconnect
# ** Warning: rtl/axil_interconnect.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(96): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(102): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_interconnect
# End time: 13:25:52 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 8
# vlog -sv rtl/axil_interconnect_wrapper.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:25:52 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect_wrapper.sv 
# -- Compiling module axil_interconnect_wrapper
# ** Warning: rtl/axil_interconnect_wrapper.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# 
# Top level modules:
# 	axil_interconnect_wrapper
# End time: 13:25:52 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 4
# vlog -sv tb/axil_interconnect_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:25:52 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/axil_interconnect_tb.sv 
# -- Compiling module axil_interconnect_tb
# -- Importing package pkg_tb
# ** Error: (vlog-13069) tb/axil_interconnect_tb.sv(191): near "(": syntax error, unexpected '('.
# ** Error: (vlog-13069) tb/axil_interconnect_tb.sv(196): near "(": syntax error, unexpected '('.
# ** Error: (vlog-13069) tb/axil_interconnect_tb.sv(201): near "(": syntax error, unexpected '('.
# End time: 13:25:52 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 3, Warnings: 0
# ** Error: /home/maxim/Quartus/questa_fse/linux_x86_64/vlog failed.
# Error in macro ./tb/vsim/vsim.do line 16
# /home/maxim/Quartus/questa_fse/linux_x86_64/vlog failed.
#     while executing
# "vlog -sv tb/axil_interconnect_tb.sv"
do tb/vsim/vsim.do
# 
# Create the work library
# vlib work
# ** Warning: (vlib-34) Library already exists at "work".
# Errors: 0, Warnings: 1
# 
# Compile the packages
# vlog -sv tb/pkg_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:28:10 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/pkg_tb.sv 
# -- Compiling package pkg_tb
# 
# Top level modules:
# 	--none--
# End time: 13:28:10 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Compile the design and testbench
# vlog -sv rtl/axil_decoder_addr_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:28:10 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_decoder_addr_wr.sv 
# -- Compiling module axil_decoder_addr_wr
# 
# Top level modules:
# 	axil_decoder_addr_wr
# End time: 13:28:10 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_arbiter_priority_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:28:10 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_arbiter_priority_wr.sv 
# -- Compiling module axil_arbiter_priority_wr
# 
# Top level modules:
# 	axil_arbiter_priority_wr
# End time: 13:28:10 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_crossbar_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:28:10 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_crossbar_wr.sv 
# -- Compiling module axil_crossbar_wr
# ** Warning: rtl/axil_crossbar_wr.sv(9): (vlog-13314) Defaulting port 'grant_wr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(10): (vlog-13314) Defaulting port 'grant_wr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(11): (vlog-13314) Defaulting port 'grant_wr_cdr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(12): (vlog-13314) Defaulting port 'grant_wr_cdr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(15): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(20): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(21): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(42): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(54): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(55): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(56): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(57): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(58): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(59): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(63): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(64): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(65): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(66): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(67): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(68): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(79): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(80): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(81): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(82): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(86): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(87): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(88): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(89): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_crossbar_wr
# End time: 13:28:10 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 28
# vlog -sv rtl/axil_interconnect.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:28:10 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect.sv 
# -- Compiling module axil_interconnect
# ** Warning: rtl/axil_interconnect.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(96): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(102): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_interconnect
# End time: 13:28:10 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 8
# vlog -sv rtl/axil_interconnect_wrapper.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:28:10 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect_wrapper.sv 
# -- Compiling module axil_interconnect_wrapper
# ** Warning: rtl/axil_interconnect_wrapper.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# 
# Top level modules:
# 	axil_interconnect_wrapper
# End time: 13:28:10 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 4
# vlog -sv tb/axil_interconnect_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:28:10 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/axil_interconnect_tb.sv 
# -- Compiling module axil_interconnect_tb
# -- Importing package pkg_tb
# ** Warning: tb/axil_interconnect_tb.sv(186): (vlog-2244) Variable 'master0' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(187): (vlog-2244) Variable 'master1' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(188): (vlog-2244) Variable 'slave0' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# 
# Top level modules:
# 	axil_interconnect_tb
# End time: 13:28:10 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 3
# 
# Simulate the testbench
# vsim -t 1ns -L altera_mf_ver -voptargs="+acc" axil_interconnect_tb
# End time: 13:28:12 on Jul 25,2024, Elapsed time: 0:05:06
# Errors: 1, Warnings: 2
# vsim -t 1ns -L altera_mf_ver -voptargs=""+acc"" axil_interconnect_tb 
# Start time: 13:28:12 on Jul 25,2024
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Warning: tb/axil_interconnect_tb.sv(186): (vopt-2244) Variable 'master0' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(187): (vopt-2244) Variable 'master1' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(188): (vopt-2244) Variable 'slave0' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(50): (vopt-2685) [TFMPC] - Too few port connections for 'axil_interconnect_wrapper_inst'.  Expected 23, found 22.
# ** Warning: tb/axil_interconnect_tb.sv(50): (vopt-2718) [TFMPC] - Missing connection for port 'addr_illegal'.
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=5.
# Loading sv_std.std
# Loading work.pkg_tb(fast)
# Loading work.axil_interconnect_tb(fast)
# Loading work.axil_interconnect_wrapper(fast)
# Loading work.axil_interconnect(fast)
# Loading work.axil_decoder_addr_wr(fast)
# Loading work.axil_arbiter_priority_wr(fast)
# Loading work.axil_crossbar_wr(fast)
# 
# Add signals to the waveform window
# add wave -radix binary              axil_interconnect_wrapper_inst/aclk
# add wave -radix binary              axil_interconnect_wrapper_inst/aresetn
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_wdata[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bresp[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_wdata[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bresp[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bready[1]
# 
# 
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[2]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[3]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[3]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[3]
# 
# 
# Run the simulation for the specified time
# run 10ms
# 
# Zoom out to show all waveform data
# wave zoom full
# 0 ns
# 10500 us
do tb/vsim/vsim.do
# 
# Create the work library
# vlib work
# ** Warning: (vlib-34) Library already exists at "work".
# Errors: 0, Warnings: 1
# 
# Compile the packages
# vlog -sv tb/pkg_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:28:44 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/pkg_tb.sv 
# -- Compiling package pkg_tb
# 
# Top level modules:
# 	--none--
# End time: 13:28:44 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Compile the design and testbench
# vlog -sv rtl/axil_decoder_addr_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:28:44 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_decoder_addr_wr.sv 
# -- Compiling module axil_decoder_addr_wr
# 
# Top level modules:
# 	axil_decoder_addr_wr
# End time: 13:28:45 on Jul 25,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_arbiter_priority_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:28:45 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_arbiter_priority_wr.sv 
# -- Compiling module axil_arbiter_priority_wr
# 
# Top level modules:
# 	axil_arbiter_priority_wr
# End time: 13:28:45 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_crossbar_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:28:45 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_crossbar_wr.sv 
# -- Compiling module axil_crossbar_wr
# ** Warning: rtl/axil_crossbar_wr.sv(9): (vlog-13314) Defaulting port 'grant_wr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(10): (vlog-13314) Defaulting port 'grant_wr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(11): (vlog-13314) Defaulting port 'grant_wr_cdr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(12): (vlog-13314) Defaulting port 'grant_wr_cdr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(15): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(20): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(21): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(42): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(54): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(55): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(56): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(57): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(58): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(59): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(63): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(64): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(65): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(66): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(67): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(68): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(79): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(80): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(81): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(82): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(86): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(87): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(88): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(89): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_crossbar_wr
# End time: 13:28:45 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 28
# vlog -sv rtl/axil_interconnect.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:28:45 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect.sv 
# -- Compiling module axil_interconnect
# ** Warning: rtl/axil_interconnect.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(96): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(102): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_interconnect
# End time: 13:28:45 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 8
# vlog -sv rtl/axil_interconnect_wrapper.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:28:45 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect_wrapper.sv 
# -- Compiling module axil_interconnect_wrapper
# ** Warning: rtl/axil_interconnect_wrapper.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# 
# Top level modules:
# 	axil_interconnect_wrapper
# End time: 13:28:45 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 4
# vlog -sv tb/axil_interconnect_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:28:45 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/axil_interconnect_tb.sv 
# -- Compiling module axil_interconnect_tb
# -- Importing package pkg_tb
# ** Warning: tb/axil_interconnect_tb.sv(186): (vlog-2244) Variable 'master0' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(187): (vlog-2244) Variable 'master1' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(188): (vlog-2244) Variable 'slave0' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# 
# Top level modules:
# 	axil_interconnect_tb
# End time: 13:28:45 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 3
# 
# Simulate the testbench
# vsim -t 1ns -L altera_mf_ver -voptargs="+acc" axil_interconnect_tb
# End time: 13:28:47 on Jul 25,2024, Elapsed time: 0:00:35
# Errors: 0, Warnings: 5
# vsim -t 1ns -L altera_mf_ver -voptargs=""+acc"" axil_interconnect_tb 
# Start time: 13:28:47 on Jul 25,2024
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Warning: tb/axil_interconnect_tb.sv(186): (vopt-2244) Variable 'master0' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(187): (vopt-2244) Variable 'master1' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(188): (vopt-2244) Variable 'slave0' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(50): (vopt-2685) [TFMPC] - Too few port connections for 'axil_interconnect_wrapper_inst'.  Expected 23, found 22.
# ** Warning: tb/axil_interconnect_tb.sv(50): (vopt-2718) [TFMPC] - Missing connection for port 'addr_illegal'.
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=5.
# Loading sv_std.std
# Loading work.pkg_tb(fast)
# Loading work.axil_interconnect_tb(fast)
# Loading work.axil_interconnect_wrapper(fast)
# Loading work.axil_interconnect(fast)
# Loading work.axil_decoder_addr_wr(fast)
# Loading work.axil_arbiter_priority_wr(fast)
# Loading work.axil_crossbar_wr(fast)
# 
# Add signals to the waveform window
# add wave -radix binary              axil_interconnect_wrapper_inst/aclk
# add wave -radix binary              axil_interconnect_wrapper_inst/aresetn
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_wdata[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bresp[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_wdata[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bresp[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bready[1]
# 
# 
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[2]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[3]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[3]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[3]
# 
# 
# Run the simulation for the specified time
# run 10ms
# 
# Zoom out to show all waveform data
# wave zoom full
# 0 ns
# 10500 us
do tb/vsim/vsim.do
# 
# Create the work library
# vlib work
# ** Warning: (vlib-34) Library already exists at "work".
# Errors: 0, Warnings: 1
# 
# Compile the packages
# vlog -sv tb/pkg_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:30:28 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/pkg_tb.sv 
# -- Compiling package pkg_tb
# 
# Top level modules:
# 	--none--
# End time: 13:30:28 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Compile the design and testbench
# vlog -sv rtl/axil_decoder_addr_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:30:28 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_decoder_addr_wr.sv 
# -- Compiling module axil_decoder_addr_wr
# 
# Top level modules:
# 	axil_decoder_addr_wr
# End time: 13:30:28 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_arbiter_priority_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:30:28 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_arbiter_priority_wr.sv 
# -- Compiling module axil_arbiter_priority_wr
# 
# Top level modules:
# 	axil_arbiter_priority_wr
# End time: 13:30:28 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_crossbar_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:30:28 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_crossbar_wr.sv 
# -- Compiling module axil_crossbar_wr
# ** Warning: rtl/axil_crossbar_wr.sv(9): (vlog-13314) Defaulting port 'grant_wr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(10): (vlog-13314) Defaulting port 'grant_wr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(11): (vlog-13314) Defaulting port 'grant_wr_cdr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(12): (vlog-13314) Defaulting port 'grant_wr_cdr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(15): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(20): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(21): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(42): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(54): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(55): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(56): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(57): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(58): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(59): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(63): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(64): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(65): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(66): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(67): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(68): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(79): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(80): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(81): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(82): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(86): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(87): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(88): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(89): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_crossbar_wr
# End time: 13:30:28 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 28
# vlog -sv rtl/axil_interconnect.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:30:28 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect.sv 
# -- Compiling module axil_interconnect
# ** Warning: rtl/axil_interconnect.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(96): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(102): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_interconnect
# End time: 13:30:28 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 8
# vlog -sv rtl/axil_interconnect_wrapper.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:30:28 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect_wrapper.sv 
# -- Compiling module axil_interconnect_wrapper
# ** Warning: rtl/axil_interconnect_wrapper.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# 
# Top level modules:
# 	axil_interconnect_wrapper
# End time: 13:30:28 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 4
# vlog -sv tb/axil_interconnect_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:30:28 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/axil_interconnect_tb.sv 
# -- Compiling module axil_interconnect_tb
# -- Importing package pkg_tb
# ** Warning: tb/axil_interconnect_tb.sv(180): (vlog-2244) Variable 'master0' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(181): (vlog-2244) Variable 'master1' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(182): (vlog-2244) Variable 'slave0' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# 
# Top level modules:
# 	axil_interconnect_tb
# End time: 13:30:28 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 3
# 
# Simulate the testbench
# vsim -t 1ns -L altera_mf_ver -voptargs="+acc" axil_interconnect_tb
# End time: 13:30:31 on Jul 25,2024, Elapsed time: 0:01:44
# Errors: 0, Warnings: 5
# vsim -t 1ns -L altera_mf_ver -voptargs=""+acc"" axil_interconnect_tb 
# Start time: 13:30:31 on Jul 25,2024
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Warning: tb/axil_interconnect_tb.sv(180): (vopt-2244) Variable 'master0' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(181): (vopt-2244) Variable 'master1' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(182): (vopt-2244) Variable 'slave0' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(50): (vopt-2685) [TFMPC] - Too few port connections for 'axil_interconnect_wrapper_inst'.  Expected 23, found 22.
# ** Warning: tb/axil_interconnect_tb.sv(50): (vopt-2718) [TFMPC] - Missing connection for port 'addr_illegal'.
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=5.
# Loading sv_std.std
# Loading work.pkg_tb(fast)
# Loading work.axil_interconnect_tb(fast)
# Loading work.axil_interconnect_wrapper(fast)
# Loading work.axil_interconnect(fast)
# Loading work.axil_decoder_addr_wr(fast)
# Loading work.axil_arbiter_priority_wr(fast)
# Loading work.axil_crossbar_wr(fast)
# 
# Add signals to the waveform window
# add wave -radix binary              axil_interconnect_wrapper_inst/aclk
# add wave -radix binary              axil_interconnect_wrapper_inst/aresetn
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_wdata[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bresp[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_wdata[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bresp[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bready[1]
# 
# 
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[2]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[3]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[3]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[3]
# 
# 
# Run the simulation for the specified time
# run 10ms
# 
# Zoom out to show all waveform data
# wave zoom full
# 0 ns
# 10500 us
# Causality operation skipped due to absence of debug database file
do tb/vsim/vsim.do
# 
# Create the work library
# vlib work
# ** Warning: (vlib-34) Library already exists at "work".
# Errors: 0, Warnings: 1
# 
# Compile the packages
# vlog -sv tb/pkg_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:32:24 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/pkg_tb.sv 
# -- Compiling package pkg_tb
# 
# Top level modules:
# 	--none--
# End time: 13:32:24 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Compile the design and testbench
# vlog -sv rtl/axil_decoder_addr_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:32:24 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_decoder_addr_wr.sv 
# -- Compiling module axil_decoder_addr_wr
# 
# Top level modules:
# 	axil_decoder_addr_wr
# End time: 13:32:24 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_arbiter_priority_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:32:24 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_arbiter_priority_wr.sv 
# -- Compiling module axil_arbiter_priority_wr
# 
# Top level modules:
# 	axil_arbiter_priority_wr
# End time: 13:32:24 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_crossbar_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:32:24 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_crossbar_wr.sv 
# -- Compiling module axil_crossbar_wr
# ** Warning: rtl/axil_crossbar_wr.sv(9): (vlog-13314) Defaulting port 'grant_wr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(10): (vlog-13314) Defaulting port 'grant_wr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(11): (vlog-13314) Defaulting port 'grant_wr_cdr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(12): (vlog-13314) Defaulting port 'grant_wr_cdr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(15): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(20): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(21): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(42): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(54): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(55): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(56): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(57): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(58): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(59): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(63): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(64): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(65): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(66): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(67): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(68): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(79): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(80): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(81): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(82): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(86): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(87): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(88): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(89): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_crossbar_wr
# End time: 13:32:24 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 28
# vlog -sv rtl/axil_interconnect.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:32:24 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect.sv 
# -- Compiling module axil_interconnect
# ** Warning: rtl/axil_interconnect.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(96): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(102): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_interconnect
# End time: 13:32:24 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 8
# vlog -sv rtl/axil_interconnect_wrapper.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:32:24 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect_wrapper.sv 
# -- Compiling module axil_interconnect_wrapper
# ** Warning: rtl/axil_interconnect_wrapper.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# 
# Top level modules:
# 	axil_interconnect_wrapper
# End time: 13:32:24 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 4
# vlog -sv tb/axil_interconnect_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:32:24 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/axil_interconnect_tb.sv 
# -- Compiling module axil_interconnect_tb
# -- Importing package pkg_tb
# ** Warning: tb/axil_interconnect_tb.sv(180): (vlog-2244) Variable 'master0' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(181): (vlog-2244) Variable 'master1' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(182): (vlog-2244) Variable 'slave0' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# 
# Top level modules:
# 	axil_interconnect_tb
# End time: 13:32:24 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 3
# 
# Simulate the testbench
# vsim -t 1ns -L altera_mf_ver -voptargs="+acc" axil_interconnect_tb
# End time: 13:32:25 on Jul 25,2024, Elapsed time: 0:01:54
# Errors: 0, Warnings: 5
# vsim -t 1ns -L altera_mf_ver -voptargs=""+acc"" axil_interconnect_tb 
# Start time: 13:32:25 on Jul 25,2024
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading sv_std.std
# Loading work.pkg_tb(fast)
# Loading work.axil_interconnect_tb(fast)
# Loading work.axil_interconnect_wrapper(fast)
# Loading work.axil_interconnect(fast)
# Loading work.axil_decoder_addr_wr(fast)
# Loading work.axil_arbiter_priority_wr(fast)
# Loading work.axil_crossbar_wr(fast)
# 
# Add signals to the waveform window
# add wave -radix binary              axil_interconnect_wrapper_inst/aclk
# add wave -radix binary              axil_interconnect_wrapper_inst/aresetn
# 
# add wave -radix binary              axil_arbiter_priority_wr_inst/request_wr
# ** UI-Msg: (vish-4014) No objects found matching 'axil_arbiter_priority_wr_inst/request_wr'.
# Error in macro ./tb/vsim/vsim.do line 25
# ** UI-Msg: (vish-4014) No objects found matching 'axil_arbiter_priority_wr_inst/request_wr'.
#     while executing
# "add wave -radix binary              axil_arbiter_priority_wr_inst/request_wr"
do tb/vsim/vsim.do
# 
# Create the work library
# vlib work
# ** Warning: (vlib-34) Library already exists at "work".
# Errors: 0, Warnings: 1
# 
# Compile the packages
# vlog -sv tb/pkg_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:33:01 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/pkg_tb.sv 
# -- Compiling package pkg_tb
# 
# Top level modules:
# 	--none--
# End time: 13:33:01 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Compile the design and testbench
# vlog -sv rtl/axil_decoder_addr_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:33:01 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_decoder_addr_wr.sv 
# -- Compiling module axil_decoder_addr_wr
# 
# Top level modules:
# 	axil_decoder_addr_wr
# End time: 13:33:01 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_arbiter_priority_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:33:01 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_arbiter_priority_wr.sv 
# -- Compiling module axil_arbiter_priority_wr
# 
# Top level modules:
# 	axil_arbiter_priority_wr
# End time: 13:33:01 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_crossbar_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:33:01 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_crossbar_wr.sv 
# -- Compiling module axil_crossbar_wr
# ** Warning: rtl/axil_crossbar_wr.sv(9): (vlog-13314) Defaulting port 'grant_wr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(10): (vlog-13314) Defaulting port 'grant_wr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(11): (vlog-13314) Defaulting port 'grant_wr_cdr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(12): (vlog-13314) Defaulting port 'grant_wr_cdr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(15): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(20): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(21): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(42): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(54): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(55): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(56): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(57): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(58): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(59): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(63): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(64): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(65): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(66): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(67): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(68): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(79): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(80): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(81): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(82): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(86): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(87): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(88): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(89): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_crossbar_wr
# End time: 13:33:01 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 28
# vlog -sv rtl/axil_interconnect.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:33:01 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect.sv 
# -- Compiling module axil_interconnect
# ** Warning: rtl/axil_interconnect.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(96): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(102): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_interconnect
# End time: 13:33:01 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 8
# vlog -sv rtl/axil_interconnect_wrapper.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:33:01 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect_wrapper.sv 
# -- Compiling module axil_interconnect_wrapper
# ** Warning: rtl/axil_interconnect_wrapper.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# 
# Top level modules:
# 	axil_interconnect_wrapper
# End time: 13:33:01 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 4
# vlog -sv tb/axil_interconnect_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:33:01 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/axil_interconnect_tb.sv 
# -- Compiling module axil_interconnect_tb
# -- Importing package pkg_tb
# ** Warning: tb/axil_interconnect_tb.sv(180): (vlog-2244) Variable 'master0' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(181): (vlog-2244) Variable 'master1' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(182): (vlog-2244) Variable 'slave0' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# 
# Top level modules:
# 	axil_interconnect_tb
# End time: 13:33:02 on Jul 25,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 3
# 
# Simulate the testbench
# vsim -t 1ns -L altera_mf_ver -voptargs="+acc" axil_interconnect_tb
# End time: 13:33:02 on Jul 25,2024, Elapsed time: 0:00:37
# Errors: 0, Warnings: 0
# vsim -t 1ns -L altera_mf_ver -voptargs=""+acc"" axil_interconnect_tb 
# Start time: 13:33:02 on Jul 25,2024
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading sv_std.std
# Loading work.pkg_tb(fast)
# Loading work.axil_interconnect_tb(fast)
# Loading work.axil_interconnect_wrapper(fast)
# Loading work.axil_interconnect(fast)
# Loading work.axil_decoder_addr_wr(fast)
# Loading work.axil_arbiter_priority_wr(fast)
# Loading work.axil_crossbar_wr(fast)
# 
# Add signals to the waveform window
# add wave -radix binary              axil_interconnect_wrapper_inst/aclk
# add wave -radix binary              axil_interconnect_wrapper_inst/aresetn
# 
# add wave -radix binary              axil_arbiter_priority_wr/request_wr
# ** UI-Msg: (vish-4014) No objects found matching 'axil_arbiter_priority_wr/request_wr'.
# Error in macro ./tb/vsim/vsim.do line 25
# ** UI-Msg: (vish-4014) No objects found matching 'axil_arbiter_priority_wr/request_wr'.
#     while executing
# "add wave -radix binary              axil_arbiter_priority_wr/request_wr"
do tb/vsim/vsim.do
# 
# Create the work library
# vlib work
# ** Warning: (vlib-34) Library already exists at "work".
# Errors: 0, Warnings: 1
# 
# Compile the packages
# vlog -sv tb/pkg_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:34:18 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/pkg_tb.sv 
# -- Compiling package pkg_tb
# 
# Top level modules:
# 	--none--
# End time: 13:34:18 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Compile the design and testbench
# vlog -sv rtl/axil_decoder_addr_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:34:18 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_decoder_addr_wr.sv 
# -- Compiling module axil_decoder_addr_wr
# 
# Top level modules:
# 	axil_decoder_addr_wr
# End time: 13:34:18 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_arbiter_priority_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:34:18 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_arbiter_priority_wr.sv 
# -- Compiling module axil_arbiter_priority_wr
# 
# Top level modules:
# 	axil_arbiter_priority_wr
# End time: 13:34:18 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_crossbar_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:34:18 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_crossbar_wr.sv 
# -- Compiling module axil_crossbar_wr
# ** Warning: rtl/axil_crossbar_wr.sv(9): (vlog-13314) Defaulting port 'grant_wr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(10): (vlog-13314) Defaulting port 'grant_wr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(11): (vlog-13314) Defaulting port 'grant_wr_cdr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(12): (vlog-13314) Defaulting port 'grant_wr_cdr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(15): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(20): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(21): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(42): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(54): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(55): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(56): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(57): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(58): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(59): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(63): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(64): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(65): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(66): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(67): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(68): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(79): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(80): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(81): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(82): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(86): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(87): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(88): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(89): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_crossbar_wr
# End time: 13:34:18 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 28
# vlog -sv rtl/axil_interconnect.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:34:18 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect.sv 
# -- Compiling module axil_interconnect
# ** Warning: rtl/axil_interconnect.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(96): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(102): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_interconnect
# End time: 13:34:18 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 8
# vlog -sv rtl/axil_interconnect_wrapper.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:34:18 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect_wrapper.sv 
# -- Compiling module axil_interconnect_wrapper
# ** Warning: rtl/axil_interconnect_wrapper.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# 
# Top level modules:
# 	axil_interconnect_wrapper
# End time: 13:34:18 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 4
# vlog -sv tb/axil_interconnect_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:34:18 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/axil_interconnect_tb.sv 
# -- Compiling module axil_interconnect_tb
# -- Importing package pkg_tb
# ** Warning: tb/axil_interconnect_tb.sv(180): (vlog-2244) Variable 'master0' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(181): (vlog-2244) Variable 'master1' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(182): (vlog-2244) Variable 'slave0' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# 
# Top level modules:
# 	axil_interconnect_tb
# End time: 13:34:18 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 3
# 
# Simulate the testbench
# vsim -t 1ns -L altera_mf_ver -voptargs="+acc" axil_interconnect_tb
# End time: 13:34:19 on Jul 25,2024, Elapsed time: 0:01:17
# Errors: 0, Warnings: 0
# vsim -t 1ns -L altera_mf_ver -voptargs=""+acc"" axil_interconnect_tb 
# Start time: 13:34:19 on Jul 25,2024
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading sv_std.std
# Loading work.pkg_tb(fast)
# Loading work.axil_interconnect_tb(fast)
# Loading work.axil_interconnect_wrapper(fast)
# Loading work.axil_interconnect(fast)
# Loading work.axil_decoder_addr_wr(fast)
# Loading work.axil_arbiter_priority_wr(fast)
# Loading work.axil_crossbar_wr(fast)
# 
# Add signals to the waveform window
# add wave -radix binary              axil_interconnect_wrapper_inst/aclk
# add wave -radix binary              axil_interconnect_wrapper_inst/aresetn
# 
# add wave -radix binary              axil_arbiter_priority_wr[0]/request_wr
# ** UI-Msg: (vish-4014) No objects found matching 'axil_arbiter_priority_wr[0]/request_wr'.
# Error in macro ./tb/vsim/vsim.do line 25
# ** UI-Msg: (vish-4014) No objects found matching 'axil_arbiter_priority_wr[0]/request_wr'.
#     while executing
# "add wave -radix binary              axil_arbiter_priority_wr[0]/request_wr"
do tb/vsim/vsim.do
# 
# Create the work library
# vlib work
# ** Warning: (vlib-34) Library already exists at "work".
# Errors: 0, Warnings: 1
# 
# Compile the packages
# vlog -sv tb/pkg_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:35:21 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/pkg_tb.sv 
# -- Compiling package pkg_tb
# 
# Top level modules:
# 	--none--
# End time: 13:35:21 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Compile the design and testbench
# vlog -sv rtl/axil_decoder_addr_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:35:21 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_decoder_addr_wr.sv 
# -- Compiling module axil_decoder_addr_wr
# 
# Top level modules:
# 	axil_decoder_addr_wr
# End time: 13:35:21 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_arbiter_priority_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:35:21 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_arbiter_priority_wr.sv 
# -- Compiling module axil_arbiter_priority_wr
# 
# Top level modules:
# 	axil_arbiter_priority_wr
# End time: 13:35:21 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_crossbar_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:35:21 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_crossbar_wr.sv 
# -- Compiling module axil_crossbar_wr
# ** Warning: rtl/axil_crossbar_wr.sv(9): (vlog-13314) Defaulting port 'grant_wr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(10): (vlog-13314) Defaulting port 'grant_wr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(11): (vlog-13314) Defaulting port 'grant_wr_cdr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(12): (vlog-13314) Defaulting port 'grant_wr_cdr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(15): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(20): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(21): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(42): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(54): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(55): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(56): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(57): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(58): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(59): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(63): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(64): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(65): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(66): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(67): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(68): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(79): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(80): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(81): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(82): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(86): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(87): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(88): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(89): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_crossbar_wr
# End time: 13:35:21 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 28
# vlog -sv rtl/axil_interconnect.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:35:21 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect.sv 
# -- Compiling module axil_interconnect
# ** Warning: rtl/axil_interconnect.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(96): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(102): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_interconnect
# End time: 13:35:21 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 8
# vlog -sv rtl/axil_interconnect_wrapper.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:35:21 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect_wrapper.sv 
# -- Compiling module axil_interconnect_wrapper
# ** Warning: rtl/axil_interconnect_wrapper.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# 
# Top level modules:
# 	axil_interconnect_wrapper
# End time: 13:35:21 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 4
# vlog -sv tb/axil_interconnect_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:35:21 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/axil_interconnect_tb.sv 
# -- Compiling module axil_interconnect_tb
# -- Importing package pkg_tb
# ** Warning: tb/axil_interconnect_tb.sv(180): (vlog-2244) Variable 'master0' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(181): (vlog-2244) Variable 'master1' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(182): (vlog-2244) Variable 'slave0' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# 
# Top level modules:
# 	axil_interconnect_tb
# End time: 13:35:21 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 3
# 
# Simulate the testbench
# vsim -t 1ns -L altera_mf_ver -voptargs="+acc" axil_interconnect_tb
# End time: 13:35:22 on Jul 25,2024, Elapsed time: 0:01:03
# Errors: 0, Warnings: 0
# vsim -t 1ns -L altera_mf_ver -voptargs=""+acc"" axil_interconnect_tb 
# Start time: 13:35:22 on Jul 25,2024
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading sv_std.std
# Loading work.pkg_tb(fast)
# Loading work.axil_interconnect_tb(fast)
# Loading work.axil_interconnect_wrapper(fast)
# Loading work.axil_interconnect(fast)
# Loading work.axil_decoder_addr_wr(fast)
# Loading work.axil_arbiter_priority_wr(fast)
# Loading work.axil_crossbar_wr(fast)
# 
# Add signals to the waveform window
# add wave -radix binary              axil_interconnect_wrapper_inst/aclk
# add wave -radix binary              axil_interconnect_wrapper_inst/aresetn
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/axil_interconnect_inst/axil_arbiter_priority_wr[0]/request_wr
# ** UI-Msg: (vish-4014) No objects found matching 'axil_interconnect_wrapper_inst/axil_interconnect_inst/axil_arbiter_priority_wr[0]/request_wr'.
# Error in macro ./tb/vsim/vsim.do line 25
# ** UI-Msg: (vish-4014) No objects found matching 'axil_interconnect_wrapper_inst/axil_interconnect_inst/axil_arbiter_priority_wr[0]/request_wr'.
#     while executing
# "add wave -radix binary              axil_interconnect_wrapper_inst/axil_interconnect_inst/axil_arbiter_priority_wr[0]/request_wr"
do tb/vsim/vsim.do
# 
# Create the work library
# vlib work
# ** Warning: (vlib-34) Library already exists at "work".
# Errors: 0, Warnings: 1
# 
# Compile the packages
# vlog -sv tb/pkg_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:36:30 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/pkg_tb.sv 
# -- Compiling package pkg_tb
# 
# Top level modules:
# 	--none--
# End time: 13:36:30 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Compile the design and testbench
# vlog -sv rtl/axil_decoder_addr_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:36:30 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_decoder_addr_wr.sv 
# -- Compiling module axil_decoder_addr_wr
# 
# Top level modules:
# 	axil_decoder_addr_wr
# End time: 13:36:30 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_arbiter_priority_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:36:30 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_arbiter_priority_wr.sv 
# -- Compiling module axil_arbiter_priority_wr
# 
# Top level modules:
# 	axil_arbiter_priority_wr
# End time: 13:36:30 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_crossbar_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:36:30 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_crossbar_wr.sv 
# -- Compiling module axil_crossbar_wr
# ** Warning: rtl/axil_crossbar_wr.sv(9): (vlog-13314) Defaulting port 'grant_wr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(10): (vlog-13314) Defaulting port 'grant_wr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(11): (vlog-13314) Defaulting port 'grant_wr_cdr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(12): (vlog-13314) Defaulting port 'grant_wr_cdr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(15): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(20): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(21): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(42): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(54): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(55): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(56): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(57): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(58): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(59): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(63): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(64): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(65): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(66): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(67): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(68): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(79): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(80): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(81): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(82): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(86): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(87): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(88): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(89): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_crossbar_wr
# End time: 13:36:30 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 28
# vlog -sv rtl/axil_interconnect.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:36:30 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect.sv 
# -- Compiling module axil_interconnect
# ** Warning: rtl/axil_interconnect.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(96): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(102): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_interconnect
# End time: 13:36:30 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 8
# vlog -sv rtl/axil_interconnect_wrapper.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:36:30 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect_wrapper.sv 
# -- Compiling module axil_interconnect_wrapper
# ** Warning: rtl/axil_interconnect_wrapper.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# 
# Top level modules:
# 	axil_interconnect_wrapper
# End time: 13:36:30 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 4
# vlog -sv tb/axil_interconnect_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:36:30 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/axil_interconnect_tb.sv 
# -- Compiling module axil_interconnect_tb
# -- Importing package pkg_tb
# ** Warning: tb/axil_interconnect_tb.sv(180): (vlog-2244) Variable 'master0' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(181): (vlog-2244) Variable 'master1' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(182): (vlog-2244) Variable 'slave0' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# 
# Top level modules:
# 	axil_interconnect_tb
# End time: 13:36:30 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 3
# 
# Simulate the testbench
# vsim -t 1ns -L altera_mf_ver -voptargs="+acc" axil_interconnect_tb
# End time: 13:36:31 on Jul 25,2024, Elapsed time: 0:01:09
# Errors: 0, Warnings: 0
# vsim -t 1ns -L altera_mf_ver -voptargs=""+acc"" axil_interconnect_tb 
# Start time: 13:36:31 on Jul 25,2024
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading sv_std.std
# Loading work.pkg_tb(fast)
# Loading work.axil_interconnect_tb(fast)
# Loading work.axil_interconnect_wrapper(fast)
# Loading work.axil_interconnect(fast)
# Loading work.axil_decoder_addr_wr(fast)
# Loading work.axil_arbiter_priority_wr(fast)
# Loading work.axil_crossbar_wr(fast)
# 
# Add signals to the waveform window
# add wave -radix binary              axil_interconnect_wrapper_inst/aclk
# add wave -radix binary              axil_interconnect_wrapper_inst/aresetn
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/axil_interconnect_inst/axil_arbiter_priority_wr[0]/sim:/axil_interconnect_tb/axil_interconnect_wrapper_inst/axil_interconnect_inst/axil_arbiter_priority_wr[0]/axil_arbiter_priority_wr_inst/request_wr
# ** UI-Msg: (vish-4014) No objects found matching 'axil_interconnect_wrapper_inst/axil_interconnect_inst/axil_arbiter_priority_wr[0]/sim:/axil_interconnect_tb/axil_interconnect_wrapper_inst/axil_interconnect_inst/axil_arbiter_priority_wr[0]/axil_arbiter_priority_wr_inst/request_wr'.
# Error in macro ./tb/vsim/vsim.do line 25
# ** UI-Msg: (vish-4014) No objects found matching 'axil_interconnect_wrapper_inst/axil_interconnect_inst/axil_arbiter_priority_wr[0]/sim:/axil_interconnect_tb/axil_interconnect_wrapper_inst/axil_interconnect_inst/axil_arbiter_priority_wr[0]/axil_arbiter_priority_wr_inst/request_wr'.
#     while executing
# "add wave -radix binary              axil_interconnect_wrapper_inst/axil_interconnect_inst/axil_arbiter_priority_wr[0]/sim:/axil_interconnect_tb/axil_i..."
add wave -position insertpoint  \
{sim:/axil_interconnect_tb/axil_interconnect_wrapper_inst/axil_interconnect_inst/axil_arbiter_priority_wr[0]/axil_arbiter_priority_wr_inst/grant_wr}
add wave -position insertpoint  \
{sim:/axil_interconnect_tb/axil_interconnect_wrapper_inst/axil_interconnect_inst/axil_arbiter_priority_wr[0]/axil_arbiter_priority_wr_inst/grant_wr}
do tb/vsim/vsim.do
# 
# Create the work library
# vlib work
# ** Warning: (vlib-34) Library already exists at "work".
# Errors: 0, Warnings: 1
# 
# Compile the packages
# vlog -sv tb/pkg_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:37:40 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/pkg_tb.sv 
# -- Compiling package pkg_tb
# 
# Top level modules:
# 	--none--
# End time: 13:37:40 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Compile the design and testbench
# vlog -sv rtl/axil_decoder_addr_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:37:40 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_decoder_addr_wr.sv 
# -- Compiling module axil_decoder_addr_wr
# 
# Top level modules:
# 	axil_decoder_addr_wr
# End time: 13:37:40 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_arbiter_priority_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:37:40 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_arbiter_priority_wr.sv 
# -- Compiling module axil_arbiter_priority_wr
# 
# Top level modules:
# 	axil_arbiter_priority_wr
# End time: 13:37:40 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_crossbar_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:37:40 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_crossbar_wr.sv 
# -- Compiling module axil_crossbar_wr
# ** Warning: rtl/axil_crossbar_wr.sv(9): (vlog-13314) Defaulting port 'grant_wr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(10): (vlog-13314) Defaulting port 'grant_wr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(11): (vlog-13314) Defaulting port 'grant_wr_cdr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(12): (vlog-13314) Defaulting port 'grant_wr_cdr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(15): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(20): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(21): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(42): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(54): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(55): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(56): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(57): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(58): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(59): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(63): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(64): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(65): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(66): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(67): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(68): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(79): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(80): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(81): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(82): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(86): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(87): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(88): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(89): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_crossbar_wr
# End time: 13:37:40 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 28
# vlog -sv rtl/axil_interconnect.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:37:40 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect.sv 
# -- Compiling module axil_interconnect
# ** Warning: rtl/axil_interconnect.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(96): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(102): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_interconnect
# End time: 13:37:40 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 8
# vlog -sv rtl/axil_interconnect_wrapper.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:37:40 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect_wrapper.sv 
# -- Compiling module axil_interconnect_wrapper
# ** Warning: rtl/axil_interconnect_wrapper.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# 
# Top level modules:
# 	axil_interconnect_wrapper
# End time: 13:37:40 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 4
# vlog -sv tb/axil_interconnect_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:37:40 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/axil_interconnect_tb.sv 
# -- Compiling module axil_interconnect_tb
# -- Importing package pkg_tb
# ** Warning: tb/axil_interconnect_tb.sv(180): (vlog-2244) Variable 'master0' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(181): (vlog-2244) Variable 'master1' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(182): (vlog-2244) Variable 'slave0' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# 
# Top level modules:
# 	axil_interconnect_tb
# End time: 13:37:40 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 3
# 
# Simulate the testbench
# vsim -t 1ns -L altera_mf_ver -voptargs="+acc" axil_interconnect_tb
# End time: 13:37:41 on Jul 25,2024, Elapsed time: 0:01:10
# Errors: 0, Warnings: 0
# vsim -t 1ns -L altera_mf_ver -voptargs=""+acc"" axil_interconnect_tb 
# Start time: 13:37:41 on Jul 25,2024
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading sv_std.std
# Loading work.pkg_tb(fast)
# Loading work.axil_interconnect_tb(fast)
# Loading work.axil_interconnect_wrapper(fast)
# Loading work.axil_interconnect(fast)
# Loading work.axil_decoder_addr_wr(fast)
# Loading work.axil_arbiter_priority_wr(fast)
# Loading work.axil_crossbar_wr(fast)
# 
# Add signals to the waveform window
# add wave -radix binary              axil_interconnect_wrapper_inst/aclk
# add wave -radix binary              axil_interconnect_wrapper_inst/aresetn
# 
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/axil_interconnect_inst/axil_arbiter_priority_wr[0]/axil_arbiter_priority_wr_inst/grant_wr
# 
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_wdata[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bresp[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/m_axil_wdata[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bresp[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/m_axil_bready[1]
# 
# 
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[2]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[2]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_awaddr[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_awready[3]
# 
# add wave -radix hexadecimal         axil_interconnect_wrapper_inst/s_axil_wdata[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wstrb[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_wready[3]
# 
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bresp[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bvalid[3]
# add wave -radix binary              axil_interconnect_wrapper_inst/s_axil_bready[3]
# 
# 
# Run the simulation for the specified time
# run 10ms
# 
# Zoom out to show all waveform data
# wave zoom full
# 0 ns
# 10500 us
do tb/vsim/vsim.do
# 
# Create the work library
# vlib work
# ** Warning: (vlib-34) Library already exists at "work".
# Errors: 0, Warnings: 1
# 
# Compile the packages
# vlog -sv tb/pkg_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:38:46 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/pkg_tb.sv 
# -- Compiling package pkg_tb
# 
# Top level modules:
# 	--none--
# End time: 13:38:47 on Jul 25,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# 
# Compile the design and testbench
# vlog -sv rtl/axil_decoder_addr_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:38:47 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_decoder_addr_wr.sv 
# -- Compiling module axil_decoder_addr_wr
# 
# Top level modules:
# 	axil_decoder_addr_wr
# End time: 13:38:47 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_arbiter_priority_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:38:47 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_arbiter_priority_wr.sv 
# -- Compiling module axil_arbiter_priority_wr
# 
# Top level modules:
# 	axil_arbiter_priority_wr
# End time: 13:38:47 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_crossbar_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:38:47 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_crossbar_wr.sv 
# -- Compiling module axil_crossbar_wr
# ** Warning: rtl/axil_crossbar_wr.sv(9): (vlog-13314) Defaulting port 'grant_wr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(10): (vlog-13314) Defaulting port 'grant_wr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(11): (vlog-13314) Defaulting port 'grant_wr_cdr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(12): (vlog-13314) Defaulting port 'grant_wr_cdr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(15): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(20): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(21): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(42): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(54): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(55): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(56): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(57): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(58): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(59): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(63): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(64): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(65): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(66): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(67): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(68): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(79): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(80): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(81): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(82): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(86): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(87): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(88): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(89): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_crossbar_wr
# End time: 13:38:47 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 28
# vlog -sv rtl/axil_interconnect.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:38:47 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect.sv 
# -- Compiling module axil_interconnect
# ** Warning: rtl/axil_interconnect.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(96): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(102): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_interconnect
# End time: 13:38:47 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 8
# vlog -sv rtl/axil_interconnect_wrapper.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:38:47 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect_wrapper.sv 
# -- Compiling module axil_interconnect_wrapper
# ** Warning: rtl/axil_interconnect_wrapper.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# 
# Top level modules:
# 	axil_interconnect_wrapper
# End time: 13:38:47 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 4
# vlog -sv tb/axil_interconnect_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:38:47 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/axil_interconnect_tb.sv 
# -- Compiling module axil_interconnect_tb
# -- Importing package pkg_tb
# ** Warning: tb/axil_interconnect_tb.sv(180): (vlog-2244) Variable 'master0' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(181): (vlog-2244) Variable 'master1' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(182): (vlog-2244) Variable 'slave0' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# 
# Top level modules:
# 	axil_interconnect_tb
# End time: 13:38:47 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 3
# 
# Simulate the testbench
# vsim -t 1ns -L altera_mf_ver -voptargs="+acc" axil_interconnect_tb
# End time: 13:38:48 on Jul 25,2024, Elapsed time: 0:01:07
# Errors: 0, Warnings: 0
# vsim -t 1ns -L altera_mf_ver -voptargs=""+acc"" axil_interconnect_tb 
# Start time: 13:38:48 on Jul 25,2024
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading sv_std.std
# Loading work.pkg_tb(fast)
# Loading work.axil_interconnect_tb(fast)
# Loading work.axil_interconnect_wrapper(fast)
# Loading work.axil_interconnect(fast)
# Loading work.axil_decoder_addr_wr(fast)
# Loading work.axil_arbiter_priority_wr(fast)
# Loading work.axil_crossbar_wr(fast)
# 
# Add signals to the waveform window
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/aclk
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/aresetn
# 
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/axil_interconnect_inst/axil_arbiter_priority_wr[0]/axil_arbiter_priority_wr_inst/grant_wr
# 
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_wdata[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_bresp[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_wdata[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_bresp[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_bready[1]
# 
# 
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wdata[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bresp[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wdata[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bresp[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awaddr[2]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awvalid[2]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wdata[2]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wstrb[2]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wvalid[2]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wready[2]
# 
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bresp[2]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bvalid[2]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awaddr[3]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awvalid[3]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awready[3]
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wdata[3]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wstrb[3]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wvalid[3]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wready[3]
# 
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bresp[3]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bvalid[3]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bready[3]
# 
# 
# Run the simulation for the specified time
# run 10ms
# 
# Zoom out to show all waveform data
# wave zoom full
# 0 ns
# 10500 us
do tb/vsim/vsim.do
# 
# Create the work library
# vlib work
# ** Warning: (vlib-34) Library already exists at "work".
# Errors: 0, Warnings: 1
# 
# Compile the packages
# vlog -sv tb/pkg_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:40:00 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/pkg_tb.sv 
# -- Compiling package pkg_tb
# 
# Top level modules:
# 	--none--
# End time: 13:40:00 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Compile the design and testbench
# vlog -sv rtl/axil_decoder_addr_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:40:00 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_decoder_addr_wr.sv 
# -- Compiling module axil_decoder_addr_wr
# 
# Top level modules:
# 	axil_decoder_addr_wr
# End time: 13:40:01 on Jul 25,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_arbiter_priority_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:40:01 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_arbiter_priority_wr.sv 
# -- Compiling module axil_arbiter_priority_wr
# 
# Top level modules:
# 	axil_arbiter_priority_wr
# End time: 13:40:01 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_crossbar_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:40:01 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_crossbar_wr.sv 
# -- Compiling module axil_crossbar_wr
# ** Warning: rtl/axil_crossbar_wr.sv(9): (vlog-13314) Defaulting port 'grant_wr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(10): (vlog-13314) Defaulting port 'grant_wr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(11): (vlog-13314) Defaulting port 'grant_wr_cdr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(12): (vlog-13314) Defaulting port 'grant_wr_cdr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(15): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(20): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(21): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(42): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(54): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(55): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(56): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(57): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(58): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(59): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(63): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(64): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(65): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(66): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(67): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(68): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(79): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(80): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(81): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(82): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(86): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(87): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(88): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(89): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_crossbar_wr
# End time: 13:40:01 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 28
# vlog -sv rtl/axil_interconnect.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:40:01 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect.sv 
# -- Compiling module axil_interconnect
# ** Warning: rtl/axil_interconnect.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(96): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(102): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_interconnect
# End time: 13:40:01 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 8
# vlog -sv rtl/axil_interconnect_wrapper.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:40:01 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect_wrapper.sv 
# -- Compiling module axil_interconnect_wrapper
# ** Warning: rtl/axil_interconnect_wrapper.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# 
# Top level modules:
# 	axil_interconnect_wrapper
# End time: 13:40:01 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 4
# vlog -sv tb/axil_interconnect_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:40:01 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/axil_interconnect_tb.sv 
# -- Compiling module axil_interconnect_tb
# -- Importing package pkg_tb
# ** Warning: tb/axil_interconnect_tb.sv(180): (vlog-2244) Variable 'master0' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(181): (vlog-2244) Variable 'master1' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(182): (vlog-2244) Variable 'slave0' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# 
# Top level modules:
# 	axil_interconnect_tb
# End time: 13:40:01 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 3
# 
# Simulate the testbench
# vsim -t 1ns -L altera_mf_ver -voptargs="+acc" axil_interconnect_tb
# End time: 13:40:02 on Jul 25,2024, Elapsed time: 0:01:14
# Errors: 0, Warnings: 0
# vsim -t 1ns -L altera_mf_ver -voptargs=""+acc"" axil_interconnect_tb 
# Start time: 13:40:02 on Jul 25,2024
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading sv_std.std
# Loading work.pkg_tb(fast)
# Loading work.axil_interconnect_tb(fast)
# Loading work.axil_interconnect_wrapper(fast)
# Loading work.axil_interconnect(fast)
# Loading work.axil_decoder_addr_wr(fast)
# Loading work.axil_arbiter_priority_wr(fast)
# Loading work.axil_crossbar_wr(fast)
# 
# Add signals to the waveform window
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/aclk
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/aresetn
# 
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/axil_interconnect_inst/axil_arbiter_priority_wr[0]/axil_arbiter_priority_wr_inst/grant_wr
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/axil_interconnect_inst/axil_arbiter_priority_wr[0]/axil_arbiter_priority_wr_inst/state_arb
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_wdata[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_bresp[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_wdata[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_bresp[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_bready[1]
# 
# 
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wdata[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bresp[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wdata[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bresp[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awaddr[2]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awvalid[2]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wdata[2]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wstrb[2]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wvalid[2]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wready[2]
# 
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bresp[2]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bvalid[2]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awaddr[3]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awvalid[3]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awready[3]
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wdata[3]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wstrb[3]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wvalid[3]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wready[3]
# 
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bresp[3]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bvalid[3]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bready[3]
# 
# 
# Run the simulation for the specified time
# run 10ms
# 
# Zoom out to show all waveform data
# wave zoom full
# 0 ns
# 10500 us
do tb/vsim/vsim.do
# 
# Create the work library
# vlib work
# ** Warning: (vlib-34) Library already exists at "work".
# Errors: 0, Warnings: 1
# 
# Compile the packages
# vlog -sv tb/pkg_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:41:06 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/pkg_tb.sv 
# -- Compiling package pkg_tb
# 
# Top level modules:
# 	--none--
# End time: 13:41:06 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Compile the design and testbench
# vlog -sv rtl/axil_decoder_addr_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:41:06 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_decoder_addr_wr.sv 
# -- Compiling module axil_decoder_addr_wr
# 
# Top level modules:
# 	axil_decoder_addr_wr
# End time: 13:41:06 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_arbiter_priority_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:41:06 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_arbiter_priority_wr.sv 
# -- Compiling module axil_arbiter_priority_wr
# 
# Top level modules:
# 	axil_arbiter_priority_wr
# End time: 13:41:06 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv rtl/axil_crossbar_wr.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:41:06 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_crossbar_wr.sv 
# -- Compiling module axil_crossbar_wr
# ** Warning: rtl/axil_crossbar_wr.sv(9): (vlog-13314) Defaulting port 'grant_wr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(10): (vlog-13314) Defaulting port 'grant_wr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(11): (vlog-13314) Defaulting port 'grant_wr_cdr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(12): (vlog-13314) Defaulting port 'grant_wr_cdr_trans' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(15): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(20): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(21): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(42): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_crossbar_wr.sv(54): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(55): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(56): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(57): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(58): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(59): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(63): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(64): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(65): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(66): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(67): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(68): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(79): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(80): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(81): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(82): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(86): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(87): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(88): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_crossbar_wr.sv(89): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_crossbar_wr
# End time: 13:41:06 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 28
# vlog -sv rtl/axil_interconnect.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:41:06 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect.sv 
# -- Compiling module axil_interconnect
# ** Warning: rtl/axil_interconnect.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect.sv(96): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(98): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# ** Warning: rtl/axil_interconnect.sv(102): (vlog-2583) [SVCHK] - Extra checking for conflicts with always_comb and always_latch variables is done at vopt time.
# 
# Top level modules:
# 	axil_interconnect
# End time: 13:41:06 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 8
# vlog -sv rtl/axil_interconnect_wrapper.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:41:06 on Jul 25,2024
# vlog -reportprogress 300 -sv rtl/axil_interconnect_wrapper.sv 
# -- Compiling module axil_interconnect_wrapper
# ** Warning: rtl/axil_interconnect_wrapper.sv(16): (vlog-13314) Defaulting port 'm_axil_awaddr' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(21): (vlog-13314) Defaulting port 'm_axil_wdata' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(22): (vlog-13314) Defaulting port 'm_axil_wstrb' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# ** Warning: rtl/axil_interconnect_wrapper.sv(43): (vlog-13314) Defaulting port 's_axil_bresp' kind to 'var' rather than 'wire' due to default compile option setting of -svinputport=relaxed.
# 
# Top level modules:
# 	axil_interconnect_wrapper
# End time: 13:41:06 on Jul 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 4
# vlog -sv tb/axil_interconnect_tb.sv
# Questa Intel Starter FPGA Edition-64 vlog 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 13:41:06 on Jul 25,2024
# vlog -reportprogress 300 -sv tb/axil_interconnect_tb.sv 
# -- Compiling module axil_interconnect_tb
# -- Importing package pkg_tb
# ** Warning: tb/axil_interconnect_tb.sv(180): (vlog-2244) Variable 'master0' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(181): (vlog-2244) Variable 'master1' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# ** Warning: tb/axil_interconnect_tb.sv(182): (vlog-2244) Variable 'slave0' is implicitly static. You must either explicitly declare it as static or automatic
# or remove the initialization in the declaration of variable.
# 
# Top level modules:
# 	axil_interconnect_tb
# End time: 13:41:07 on Jul 25,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 3
# 
# Simulate the testbench
# vsim -t 1ns -L altera_mf_ver -voptargs="+acc" axil_interconnect_tb
# End time: 13:41:07 on Jul 25,2024, Elapsed time: 0:01:05
# Errors: 0, Warnings: 0
# vsim -t 1ns -L altera_mf_ver -voptargs=""+acc"" axil_interconnect_tb 
# Start time: 13:41:07 on Jul 25,2024
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Note: (vopt-143) Recognized 1 FSM in module "axil_arbiter_priority_wr(fast)".
# Loading sv_std.std
# Loading work.pkg_tb(fast)
# Loading work.axil_interconnect_tb(fast)
# Loading work.axil_interconnect_wrapper(fast)
# Loading work.axil_interconnect(fast)
# Loading work.axil_decoder_addr_wr(fast)
# Loading work.axil_arbiter_priority_wr(fast)
# Loading work.axil_crossbar_wr(fast)
# 
# Add signals to the waveform window
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/aclk
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/aresetn
# 
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/axil_interconnect_inst/axil_arbiter_priority_wr[0]/axil_arbiter_priority_wr_inst/grant_wr
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/axil_interconnect_inst/axil_arbiter_priority_wr[0]/axil_arbiter_priority_wr_inst/state_arb
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_wdata[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_bresp[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_wdata[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_bresp[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/m_axil_bready[1]
# 
# 
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awaddr[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awvalid[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wdata[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wstrb[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wvalid[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wready[0]
# 
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bresp[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bvalid[0]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bready[0]
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awaddr[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awvalid[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wdata[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wstrb[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wvalid[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wready[1]
# 
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bresp[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bvalid[1]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bready[1]
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awaddr[2]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awvalid[2]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wdata[2]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wstrb[2]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wvalid[2]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wready[2]
# 
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bresp[2]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bvalid[2]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bready[2]
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awaddr[3]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awvalid[3]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_awready[3]
# 
# add wave -radix hexadecimal         axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wdata[3]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wstrb[3]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wvalid[3]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_wready[3]
# 
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bresp[3]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bvalid[3]
# add wave -radix binary              axil_interconnect_tb/axil_interconnect_wrapper_inst/s_axil_bready[3]
# 
# 
# Run the simulation for the specified time
# run 10ms
# 
# Zoom out to show all waveform data
# wave zoom full
# 0 ns
# 10500 us
